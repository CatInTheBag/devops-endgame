---
name: EC2

on:
  workflow_dispatch:
  pull_request:
    branches: [ master, main ]
    types:
      - closed

jobs:
  terraform-initialisation:
    #if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      PRIVATE_IP: ${{ secrets.PRIVATE_IP }}
      PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    steps:
      - name: Status
        run: |
          echo The PR was successfully merged âœ…

      - name: Checkout source
        uses: actions/checkout@v4

      - name: ðŸ”Ž Check IP
        run: curl https://api.ipify.org

      - name: Fetch GitHub Token
        id: fetch_github_token
        run: |
          TOKEN=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${ PERSONAL_ACCESS_TOKEN }" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/CatInTheBag/devops-endgame/actions/runners/registration-token | jq -r .token)
          echo "::set-output name=runner_token::$TOKEN"

      - name: Setup hashicorp
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      - name: Mask sensitive information
        run: |
          echo "::add-mask::$PRIVATE_IP"
          echo "::add-mask::$PUBLIC_KEY"
          echo "::add-mask::$TOKEN"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Initialize terraform
        run: terraform init
        working-directory: ./terraform

      - name: ðŸ’» Apply terraform
        run: terraform apply --auto-approve -var="my_ip=${PRIVATE_IP}" -var="public_key=${PUBLIC_KEY}" -var="runner_token=${{ steps.fetch_github_token.outputs.runner_token }}" -var="private_key=${{ secrets.SSH_PRIVATE_KEY }}" -var-file=terraform-dev.tfvars
        working-directory: ./terraform




